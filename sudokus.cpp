#include <iostream>
#include <vector>
#include <cmath>  // Para sqrt, necesario para subcuadros de mayor tamaño
#include <chrono> // Para medir el tiempo
#include <thread>
#include <mutex>
#include <queue>
#include <future>
#include <omp.h>
#include <random>
#include <iomanip> // Para formatear la salida

#include "sudokus.h"


// Función para inicializar un tablero con memoria dinámica
int** initializeBoard(const std::vector<std::vector<int>>& initialBoard) {
    int size = initialBoard.size();
    int** board = new int* [size];
    for (int i = 0; i < size; i++) {
        board[i] = new int[size];
        for (int j = 0; j < size; j++) {
            board[i][j] = initialBoard[i][j];
        }
    }
    return board;
}

// Función para liberar la memoria dinámica del tablero
void freeBoard(int** board, int size) {
    for (int i = 0; i < size; i++) {
        delete[] board[i];
    }
    delete[] board;
}

// Función para imprimir el tablero de Sudoku
void printBoard(int** board, int size) {
    std::cout << "{" << std::endl;
    std::cout << "\t\"board\": [" << std::endl;
    for (int i = 0; i < size; i++) {
        std::cout << "\t\t[";
        for (int j = 0; j < size; j++) {
            std::cout << board[i][j];
            if (j != size - 1) std::cout << ", ";
        }
        std::cout << "]";
        if (i != size - 1) std::cout << ",";
        std::cout << std::endl;
    }
    std::cout << "\t]" << std::endl;
    std::cout << "}" << std::endl;
}


// Tablero de Sudoku 25x25 de dificultad media como ejemplo de entrada
std::vector<std::vector<int>> board25x25_dificultad_media = {
        {13, 12,  3,  0,  0,  8,  0, 19,  0, 20, 14,  0, 22,  0,  0,  0,  7, 17,  0, 25, 15,  0, 23,  0, 21},
        {24,  0, 11,  0,  5, 25, 10,  0, 17,  0,  8, 18,  1,  4,  0, 21,  0,  9, 12,  0, 19, 20,  0, 13,  0},
        { 6, 16,  0,  0, 21, 11,  0,  2,  1,  0,  0,  0,  7, 23, 12, 18,  0, 22,  0,  0, 24,  0, 17,  0, 10},
        {20, 18,  0,  4, 15,  0, 12,  0,  9, 13, 10,  0, 17,  0, 19, 16,  5, 23, 24,  3,  0,  6,  0,  8,  1},
        {25,  0,  0,  2, 10, 15,  0,  0,  4,  7, 21,  0, 11,  3, 13,  0, 20,  0, 14,  1,  0, 16,  5, 12,  0},
        {14,  0, 12, 24, 16,  0, 13,  1,  0,  0,  2,  3,  0,  0, 18, 17, 11,  7, 25,  0,  9,  4,  8,  0, 22},
        { 0, 20,  0, 13,  6, 18, 22,  5,  0,  9, 24,  7,  0, 12, 25,  8, 10,  0, 19, 23, 14,  0,  1,  0, 15},
        {17, 23,  5,  3,  4,  0, 25, 12,  0, 15,  0, 11,  8,  0, 22,  9,  0,  0,  6,  0,  0, 18,  0, 20,  7},
        { 9,  0, 21, 25,  0,  0, 16,  0,  8,  0,  5,  0, 10, 20, 14, 22, 18,  0,  3, 13,  6, 24,  0, 23, 12},
        {18,  0,  7, 22,  8,  3,  0, 14,  2, 24,  0, 13,  0,  6,  9,  5, 12,  1, 16,  0, 10,  0, 21, 19, 25},
        {21, 14,  0, 10,  0,  9,  4,  8, 12, 18,  0, 16,  0,  0, 11,  0, 23,  3, 13,  7, 17,  0, 19, 15,  2},
        {22,  0, 13, 11, 24,  2, 20,  0, 16,  0, 12, 19, 25,  1, 10,  0,  8,  0, 21, 18,  0,  3,  6,  7,  0},
        {15,  0, 17,  6,  0,  0,  3, 25, 14, 23, 22,  0, 18,  8,  0,  1,  0, 16,  9, 11,  5, 13,  0, 10,  4},
        { 3,  0, 23, 12, 25,  0, 21, 15, 13,  0,  7,  2, 14,  9,  4, 24, 17, 10,  0,  5, 18,  0, 20,  1, 16},
        { 5,  9, 16,  8, 18,  1,  0, 10, 22, 19,  3,  0, 13, 17, 23,  6,  4, 20,  2, 12, 11, 25, 24,  0, 14},
        { 8,  0, 10, 17, 20, 12, 11,  4, 24, 14,  0, 22,  9,  7,  3,  0,  6, 13, 15,  0,  2,  1,  0, 18,  5},
        { 0,  3,  0, 15, 14, 19,  8, 16, 25,  0, 13,  1, 20, 18,  2, 12,  9, 24,  0, 10,  0, 21,  7, 17, 11},
        { 7, 22,  0, 16, 13,  0,  9,  0,  3,  2, 23,  8, 21,  0, 17, 20, 25,  0,  1, 19, 12,  0, 10,  6, 24},
        { 0, 25,  9,  0, 12, 21,  1,  7,  6, 17,  0, 24,  4, 10, 15,  2, 14,  8,  0, 22, 20, 23,  3,  0, 13},
        { 2,  0,  0, 18,  0, 20, 15, 13,  0, 10, 16,  6, 12, 25,  5,  7,  3,  0, 17,  0,  8, 14, 22,  9, 19},
        { 4, 13, 25,  0, 17, 16, 18,  3,  5,  0, 20, 12,  2, 11,  7,  0, 22,  0,  8,  6,  1,  0, 15, 24, 23},
        { 1,  8, 19,  7, 23,  4,  2,  6, 15,  0, 18, 14, 24, 22,  0, 10, 21,  5,  0,  9,  3, 12,  0, 11, 17},
        {16, 11, 18, 20,  3, 22, 14, 24, 10,  8,  9,  0, 19, 15,  0, 13,  1,  0,  7, 17, 25,  5,  4,  2,  6},
        {10,  5, 24,  0, 22, 17, 19, 20, 11, 12, 25,  4,  6, 13,  1,  3, 15, 18, 23,  2,  0,  7,  9, 14,  8},
        {12,  0, 15, 14,  2, 13, 23,  9,  7,  1, 17,  0,  3,  5,  8,  4, 16, 25,  0, 24, 21,  0, 18, 22, 20}
};



// Tablero de Sudoku 16x16 de dificultad media como ejemplo de entrada
std::vector<std::vector<int>> board16x16_dificultad_media = {
    {12, 14,  4,  5, 13,  6,  1,  9,  0,  7, 10,  2,  0,  0, 11, 15},
    {15,  6, 10,  1,  2, 11,  5, 14,  8,  3,  0,  0, 12,  7,  4, 16},
    { 9,  3,  0,  8,  0,  7, 15,  0, 11, 14,  5,  1,  0, 13,  6, 10},
    { 7,  0, 11, 13,  8, 16,  0, 10,  0,  4,  0, 12,  9,  0,  5, 14},
    { 0, 16,  0,  3, 10, 13,  8, 15,  0, 11,  7,  5,  0,  6,  2,  9},
    {13,  7,  0,  9,  1,  5,  2, 11,  3,  0, 14,  0, 15,  0, 12,  8},
    { 8,  5, 14,  0,  0,  9,  0, 12,  0, 13,  0,  0,  7, 10,  1,  3},
    { 1, 10,  2,  0, 16,  0,  7,  3,  0,  9,  8,  6,  0,  4,  0,  5},
    { 0, 13,  0, 16,  7,  0,  6,  2,  4,  0,  3,  8,  1,  5,  9, 11},
    { 5,  0,  9, 12, 11, 15,  0,  0, 13,  6,  0,  7,  0, 14, 10,  4},
    { 2, 11,  0,  0,  5,  4,  9, 13, 10, 15,  1,  0, 16, 12,  0,  7},
    {10,  8,  7,  4, 14,  3,  0,  1,  9,  0, 11, 16, 13,  0, 15,  6},
    { 3, 15,  5, 10,  0,  0, 13, 16,  0,  2,  0, 11,  6,  8,  0, 12},
    { 0,  4,  8,  0,  9, 12, 11,  7,  5,  1,  0,  0, 10, 15, 14, 13},
    { 6,  9, 13,  0,  0,  2, 14,  5,  0,  8, 12, 10,  0,  0, 16,  1},
    {11,  0,  1, 14,  0,  8, 10,  6,  7, 16,  4, 13,  0,  9,  3,  2}
};




// Tablero de Sudoku 9x9 de dificultad media como ejemplo de entrada
std::vector<std::vector<int>> board9x9_dificultad_media = {
    {5, 3, 0, 0, 7, 0, 0, 0, 0},
    {6, 0, 0, 1, 9, 5, 0, 0, 0},
    {0, 9, 8, 0, 0, 0, 0, 6, 0},
    {8, 0, 0, 0, 6, 0, 0, 0, 3},
    {4, 0, 0, 8, 0, 3, 0, 0, 1},
    {7, 0, 0, 0, 2, 0, 0, 0, 6},
    {0, 6, 0, 0, 0, 0, 2, 8, 0},
    {0, 0, 0, 4, 1, 9, 0, 0, 5},
    {0, 0, 0, 0, 8, 0, 0, 7, 9}
};